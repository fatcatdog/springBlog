package com.jacob.dao;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.jacob.model.User;

@Transactional
@Repository
public class UserDAO {
    private final JdbcTemplate jdbcTemplate;
    
    @Autowired
    private BCryptPasswordEncoder bCryptPasswordEncoder;

    @Autowired
    public UserDAO(JdbcTemplate jdbcTemplate) {
	  this.jdbcTemplate = jdbcTemplate;
    }
    
	 public User findUserByEmail(String email) {
		 
	 }
	 
	 public User findUserById(int id) {
			String sql = "SELECT id, email, firstname, lastname, password, active FROM blog WHERE id = ?";
	    	 RowMapper<User> rowMapper = new BeanPropertyRowMapper<User>(User.class);
			 User user = jdbcTemplate.queryForObject(sql, rowMapper, id);
			return user; 
	 }
	 
	 public void saveUser(User user) {
		 
	 }

}
