package com.jacob.dao;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.jacob.model.Blog;
import com.jacob.model.Upvote;

@Transactional
@Repository
public class UpvoteDAO {
    private final JdbcTemplate jdbcTemplate;

    @Autowired
    public UpvoteDAO(JdbcTemplate jdbcTemplate) {
	  this.jdbcTemplate = jdbcTemplate;
    }
    
	public void saveUpvote(Upvote upvote) {
		
	}
	
	public List<Upvote> getAllUpvotes(){
    	String sql = "SELECT id, author_id, blog_id FROM upvote";
    	 RowMapper<Upvote> rowMapper = new BeanPropertyRowMapper<Upvote>(Upvote.class);
  	   return this.jdbcTemplate.query(sql, rowMapper);
	}
	
	public Upvote getUpvote(int id) {
		
	}
	
	public void deleteUpvote(int id) {
		
	}
	
	public int countUpvotes(int blogId) {
		
	} 
	
	public boolean checkIfUserHasVotedOnThisBlogYet(int userId, int blogId) {
		
	}
	
	public int getUserUpvoteByUserIdAndBlogId(int userId, int blogId) {
		
	}
    
}
