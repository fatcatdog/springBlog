package com.jacob.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.jacob.model.Blog;
import com.jacob.model.Upvote;
import com.jacob.model.User;
import com.jacob.service.BlogService;
import com.jacob.service.UpvoteService;
import com.jacob.service.UserService;

@Controller
@RequestMapping("upvote")
public class UpvoteController {
	 @Autowired
	 private BlogService blogService;
	 
	 @Autowired
	 private UserService userService;
	 
	 @Autowired 
	 private UpvoteService upvoteService; 
	 
	
	 @RequestMapping(value = "up/{id}", method=RequestMethod.GET)
	 public ModelAndView createUpvote(@PathVariable(value = "id",  required =false) int id, @Valid User user) {
		 System.out.println("createUpvote method in blog controller has been called");
		 
		 
	  ModelAndView model = new ModelAndView();
	  
	  Blog tempBlog =  blogService.getBlog(id);

	  User author = userService.findUserById(tempBlog.getAuthor_id());
		 
	  
		 
		 
		 
		  model.addObject("blogObject", tempBlog);

		  model.addObject("blogId", tempBlog.getId());
		  model.addObject("authorName", author.getFirstname() + " " + author.getLastname());
		  model.addObject("authorEmail", author.getEmail());
		  model.addObject("title", tempBlog.getTitle());
		  model.addObject("content", tempBlog.getContent());
	  
	  Upvote tempUpvote = new Upvote(); 
	  tempUpvote.setAuthor_id(user.getId());
	  tempUpvote.setBlog_id(id);
	  upvoteService.saveUpvote(tempUpvote);
	  
	  
	  model.addObject("tempUpvoteCount", upvoteService.countUpvotes(id));
	  
	  
	  
	  
	  model.setViewName("blog/blog");
	  return model;
	 }
	 
	 
	 
	 
//	 Upvote tempUpvote = new Upvote();
//	  tempUpvote.setAuthor_id(tempAuthorId);
//	  tempUpvote.setBlog_id(temp.getId());
//	  
//	  upvoteService.saveUpvote(tempUpvote);
	  
	
}
